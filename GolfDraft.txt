
Create a new Class With name : Golf.cs
public class Golf
    {
        public double swing { get; set; }
        public double distance { get; set; }





    }


//From Class Program 

//creating the result list Before loop.
//Creating String list To display the records when the goal achieved.
            var result = new List<string>();


 //Creating List of Class Objects.
                var Report = new List<Golf>()
                    {
                     new Golf(){ swing = SwingCount, distance = BallDistance }
                    };

                //Using Linq Lambda.
                Report.ForEach(log => result.Add(Convert.ToString($"Swing {log.swing} : {log.distance} Meters.")));

                foreach(var win in result)
                {
                    Console.WriteLine(win);
                }
=========================================================

Creating Class for GolfExceptions:
inherit it from Base Class Exception.

 public class GolfExceptions : Exception
    {
        public GolfExceptions(string Msg)
        {

        }

    }

=======================================================

Cup Location Generator.
//Generating a random value to assign it for the Cup distance location variable.
            Random rand = new Random();
            double CupLocation = rand.Next(20, 301);
            Console.WriteLine("Golf Game V.2021\n");
            Console.WriteLine("The Cup is far from your location: {0} meters.", CupLocation);

=============================================================

Golf Game Code but without Conditions:

 static void Main(string[] args)
        {
            //assign variable angle to get the angle value from user input.
            double angle;
            //The speed when launching the ball (The force puted behind the swing).
            double velocity;

            //Generating a random value to assign it for the Cup distance location variable.
            Random rand = new Random();
            double CupLocation = rand.Next(20, 301);
            Console.WriteLine("Golf Game V.2021");
            //Console.WriteLine("The Cup is far from your location: {0} meters.", CupLocation);



            //Create Counter for swings.
            double SwingCount = 0;

            //Create the variable for ball distance outside the loop.
            double BallDistance;

            
            //Create variable for calculating distance to Cup.
            double DistanceToCup;

            //Create List for Swing.
            //List<double> SwingsLog = new List<double>(); //Not need for it.
            //Create List for ball Distance.
            //List<double> BallDistanceLog = new List<double>(); // Not need for it.

            //Creating String list To display the records when the goal achieved.
            var result = new List<string>();

            //Create Too Far point value to break the loop and end the game and give an exception.
            double TooFar = CupLocation + 50;






            
            int loop = 0;
            while (loop <= 5) 
            {

                Console.WriteLine("\nThe Cup is far from your location: {0} meters.", CupLocation);

                //Getting input values from user.
                Console.WriteLine("Enter the angle: ");
                double.TryParse(Console.ReadLine(), out angle);

                Console.WriteLine("Enter the force behind your swing: ");
                double.TryParse(Console.ReadLine(), out velocity);
                SwingCount += 1;




                //Algorithms to Calculating the distance for the ball.
                double AngleInRadian = (Math.PI / 180) * angle;

                double GRAVITY = 9.8;
                BallDistance = Math.Pow(velocity, 2) / GRAVITY * Math.Sin(2 * AngleInRadian);
                //Converting the value for the ball distance from decimal to nearst integer.
                BallDistance = Math.Round(BallDistance);
                //If the ball travels beyond the cup, the new distance should still be positive.
                DistanceToCup = Math.Abs(CupLocation - BallDistance);


                Console.WriteLine($"Swing count: {SwingCount}\n" +
                    $"Landing ball on: {BallDistance} Meters.\n" +
                    $"Distance To Cup is: {DistanceToCup}");

                //Each swing should move the starting location for each arc.
                Random rand2 = new Random();
                double startPoint = rand.Next(1,10);
                CupLocation += startPoint;
                


                //Creating List of Class Objects.
                var Report = new List<Golf>()
                    {
                     new Golf(){ swing = SwingCount, distance = BallDistance }
                    };

                //Using Linq Lambda.
                Report.ForEach(log => result.Add(Convert.ToString($"Swing {log.swing} : {log.distance} Meters.")));

                foreach (var win in result)
                {
                    Console.WriteLine(win);
                }
                

                
                loop += 1;
                

            } 


                Console.ReadLine();

        }

================================================================


 try
                {
                    if (BallDistance > TooFar)
                    {
                        throw new GolfExceptions("Foul! You hit the ball too far.");
                    }
                    
                }
                catch (GolfExceptions)
                {
                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine("GAME OVER!!");
                    Console.ResetColor();

                }
===================================================================

 catch(GolfExceptions)
                {

                    Console.ForegroundColor = ConsoleColor.Red;
                    Console.WriteLine("Foul! You hit the ball too far.");
                    Console.WriteLine("GAME OVER!!");
                    Console.ResetColor();
                    break;
                }
================================================================
From GolfException Calss:

class GolfExceptions : Exception
    {
        public  GolfExceptions(string message) : base(message)
        {

        }

    }


From Program calss: 

else if (BallDistance > TooFar)
                {
                    throw new GolfExceptions("Foul! You hit the ball too far, GAME OVER!");
                        
                }

                else if (SwingCount >= 2)
                {
                    throw new GolfExceptions("Too many swings have been taken, GAME OVER");
                }
=======================================================================================

Test
